/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.nhanvien;

import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Administrator
 */
public class Main extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
        mnvTk.setEnabled(false);
        tnvTk.setEnabled(false);
        mnvEdt.setEnabled(false);
        tnvEdt.setEnabled(false);
        nsEdt.setEnabled(false);
        gtEdt.setEnabled(false);
        emEdt.setEnabled(false);
        dtEdt.setEnabled(false);
        pbEdt.setEnabled(false);
        nvlEdt.setEnabled(false);
        luuBtn.setEnabled(false);
        cnBtn.setEnabled(false);
        xoaBtn.setEnabled(false);
        loadDB();
        loadDBPB();
    }
    static Connection conn;
    private String[] arr = {"Mã Nhân Viên", "Họ và tên", "Ngày Sinh", "Giới Tính", "Điện Thoại", "Email", "Mã Phòng Ban", "Ngày Vào Làm"};
    private DefaultTableModel model = new DefaultTableModel(arr, 0);

    public void loadDB() {
        try {
            conn = NhanVien.connect();
            ((DefaultTableModel) table.getModel()).setRowCount(0);
            String sql = "SELECT * FROM `nhanvien`";
            PreparedStatement ps = conn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                Vector<String> vt = new Vector<>();
                vt.add(rs.getString("manv"));
                vt.add(rs.getString("tennv"));
                vt.add(rs.getString("ngaysinh"));
                vt.add(rs.getString("gioitinh"));
                vt.add(rs.getString("dienthoai"));
                vt.add(rs.getString("email"));
                vt.add(rs.getString("maphongban"));
                vt.add(rs.getString("ngayvaolam"));
                model.addRow(vt);
                System.out.println(vt);
            }
            table.setModel(model);
            conn.close();
        } catch (ClassNotFoundException | SQLException e) {
            e.printStackTrace();
        }
    }

    public void loadDBPB() {
        try {
            conn = NhanVien.connect();
            String sql = "SELECT * FROM `phongban`";
            PreparedStatement ps = conn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                pbEdt.addItem(rs.getString("tenphongban"));
            }
            conn.close();
        } catch (ClassNotFoundException | SQLException e) {
            e.printStackTrace();
        }
    }

    public String checkDT(String dt) {
        String regex = "^(\\+84|0)[0-9]{9}$";
        Pattern p = Pattern.compile(regex);
        Matcher m = p.matcher(dt);
        if (!m.matches()) {
            JOptionPane.showMessageDialog(this, "Nhập số điện thoại lỗi! Mời nhập lại");
            return null;
        }
        return dt;
    }

    public String checkMail(String mail) {
        String regex = "^[a-zA-Z][\\w-]+@([\\w]+\\.[\\w]+|[\\w]+\\.[\\w]{2,}\\.[\\w]{2,}$)";
        Pattern p = Pattern.compile(regex);
        Matcher m = p.matcher(mail);
        if (!m.matches()) {
            JOptionPane.showMessageDialog(this, "Nhập email lỗi! Mời nhập lại");
            return null;
        }
        return mail;
    }

    private boolean checkKey(int mxb) {
        boolean kq = false;
        try {
            conn = NhanVien.connect();
            String sql = "SELECT * FROM `nhanvien` Where manv = ('" + mxb + "') ";
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            if (!rs.next()) {
                kq = true;
            }
            conn.close();
        } catch (ClassNotFoundException | SQLException e) {
        }
        return kq;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        tnvTk = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        mnvTk = new javax.swing.JTextField();
        timKiemBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        mnvEdt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        nsEdt = new com.toedter.calendar.JDateChooser();
        jLabel5 = new javax.swing.JLabel();
        dtEdt = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        emEdt = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        tnvEdt = new javax.swing.JTextField();
        gtEdt = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        pbEdt = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        nvlEdt = new com.toedter.calendar.JDateChooser();
        themBtn = new javax.swing.JButton();
        luuBtn = new javax.swing.JButton();
        cnBtn = new javax.swing.JButton();
        xoaBtn = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Họ và tên:");

        jLabel2.setText("Mã nhân viên:");

        timKiemBtn.setText("Tìm Kiếm");
        timKiemBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timKiemBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tnvTk, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(223, 223, 223)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(mnvTk, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(76, 76, 76)
                .addComponent(timKiemBtn)
                .addContainerGap(126, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tnvTk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(mnvTk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(timKiemBtn))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table);

        jLabel3.setText("Mã nhân viên");

        jLabel4.setText("Ngày sinh");

        jLabel5.setText("Điện thoại");

        jLabel6.setText("Email");

        jLabel7.setText("Họ và tên");

        jLabel8.setText("Giới tính");

        gtEdt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Chọn Giới Tính--", "Nam", "Nữ" }));

        jLabel9.setText("Phòng ban");

        pbEdt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Chọn Phòng Ban--" }));

        jLabel10.setText("Ngày vào làm");

        themBtn.setText("Thêm");
        themBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                themBtnActionPerformed(evt);
            }
        });

        luuBtn.setText("Lưu");
        luuBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                luuBtnActionPerformed(evt);
            }
        });

        cnBtn.setText("Câp Nhật");
        cnBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cnBtnActionPerformed(evt);
            }
        });

        xoaBtn.setText("Xóa");
        xoaBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xoaBtnActionPerformed(evt);
            }
        });

        jButton6.setText("Thoát");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(themBtn)
                        .addGap(18, 18, 18)
                        .addComponent(luuBtn)
                        .addGap(18, 18, 18)
                        .addComponent(cnBtn)
                        .addGap(18, 18, 18)
                        .addComponent(xoaBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton6))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(mnvEdt)
                            .addComponent(nsEdt, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)
                            .addComponent(dtEdt)
                            .addComponent(emEdt))
                        .addGap(282, 282, 282)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel7)
                                        .addComponent(jLabel8))
                                    .addGap(34, 34, 34)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(gtEdt, 0, 244, Short.MAX_VALUE)
                                        .addComponent(tnvEdt)))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel9)
                                    .addGap(27, 27, 27)
                                    .addComponent(pbEdt, 0, 244, Short.MAX_VALUE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(nvlEdt, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(mnvEdt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(tnvEdt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(nsEdt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(gtEdt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(dtEdt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(pbEdt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(emEdt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel10))
                    .addComponent(nvlEdt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 126, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(themBtn)
                    .addComponent(luuBtn)
                    .addComponent(cnBtn)
                    .addComponent(xoaBtn)
                    .addComponent(jButton6))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void themBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_themBtnActionPerformed
        // TODO add your handling code here:
        mnvTk.setEnabled(true);
        tnvTk.setEnabled(true);
        mnvEdt.setEnabled(true);
        tnvEdt.setEnabled(true);
        nsEdt.setEnabled(true);
        gtEdt.setEnabled(true);
        emEdt.setEnabled(true);
        dtEdt.setEnabled(true);
        pbEdt.setEnabled(true);
        nvlEdt.setEnabled(true);
        luuBtn.setEnabled(true);
    }//GEN-LAST:event_themBtnActionPerformed

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        // TODO add your handling code here:
        cnBtn.setEnabled(true);
        xoaBtn.setEnabled(true);
        luuBtn.setEnabled(false);
        int i = table.getSelectedRow();
        DefaultTableModel tb = (DefaultTableModel) table.getModel();
        mnvEdt.setText(tb.getValueAt(i, 0).toString());
        tnvEdt.setText(tb.getValueAt(i, 1).toString());
        String ngay = tb.getValueAt(i, 2).toString();
        java.util.Date ns;
        try {
            ns = new SimpleDateFormat("yyyy-MM-dd").parse(ngay);
            nsEdt.setDate(ns);
        } catch (Exception e) {
        }
        gtEdt.setSelectedItem(tb.getValueAt(i, 3).toString());
        dtEdt.setText(tb.getValueAt(i, 4).toString());
        emEdt.setText(tb.getValueAt(i, 5).toString());
//        pbEdt.setSelectedItem(tb.getValueAt(i, 6).toString());
        String ngayvl = tb.getValueAt(i, 7).toString();
        java.util.Date nvl;
        try {
            nvl = new SimpleDateFormat("yyyy-MM-dd").parse(ngayvl);
            nvlEdt.setDate(nvl);
        } catch (Exception e) {
        }
        String text = tb.getValueAt(i, 6).toString();

        try {
            conn = NhanVien.connect();
            String sql = "SELECT * FROM `phongban` Where maphongban = ('" + text + "') ";
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                pbEdt.setSelectedItem(rs.getString("tenphongban"));
            }
            conn.close();
        } catch (SQLException e) {
            e.printStackTrace();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tableMouseClicked

    private void luuBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_luuBtnActionPerformed
        // TODO add your handling code here:
        try {

            int manv = Integer.parseInt(mnvEdt.getText().trim());
            if (!checkKey(manv)) {
                JOptionPane.showMessageDialog(this, "Lỗi trùng manv! Mời nhập lại");
                return;
            }
            String tennv = tnvEdt.getText().trim();
            Date ngaysinh = new Date(nsEdt.getDate().getTime());
            String gioitinh = gtEdt.getSelectedItem().toString();
            if (gioitinh.equals("--Chọn Giới Tính--")) {
                JOptionPane.showMessageDialog(this, "Hãy chọn giới tính!");
                return;
            }
            String dienthoai = dtEdt.getText().trim();
            if (checkDT(dienthoai) == null) {
                return;
            }
            String email = emEdt.getText().trim();
            if (checkMail(email) == null) {
                return;
            }
            String maphongban = null;
            String mpbid = pbEdt.getSelectedItem().toString();
            if (mpbid.equals("--Chọn Phòng Ban--")) {
                JOptionPane.showMessageDialog(this, "Hãy chọn phòng ban!");
                return;
            }
            String sqlid = "SELECT * FROM `phongban` Where tenphongban = ('" + mpbid + "') ";
            conn = NhanVien.connect();
            Statement stid = conn.createStatement();
            ResultSet rsid = stid.executeQuery(sqlid);
            while (rsid.next()) {
                maphongban = rsid.getString("maphongban");
            }
            conn.close();
            Date ngayvaolam = new Date(nvlEdt.getDate().getTime());
            conn = NhanVien.connect();
            String sql = "Insert nhanvien Values('" + manv + "',N'" + tennv + "','" + ngaysinh + "','" + gioitinh + "','" + dienthoai + "','"
                    + email + "','" + maphongban + "','" + ngayvaolam + "')";
            try (Statement st = conn.createStatement()) {
                st.executeUpdate(sql);
            }
            conn.close();
            loadDB();
        } catch (ClassNotFoundException | SQLException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_luuBtnActionPerformed

    private void cnBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cnBtnActionPerformed
        // TODO add your handling code here:
        try {

            int manv = Integer.parseInt(mnvEdt.getText().trim());
            String tennv = tnvEdt.getText().trim();
            Date ngaysinh = new Date(nsEdt.getDate().getTime());
            String gioitinh = gtEdt.getSelectedItem().toString();
            if (gioitinh.equals("--Chọn Giới Tính--")) {
                JOptionPane.showMessageDialog(this, "Hãy chọn giới tính!");
                return;
            }
            String dienthoai = dtEdt.getText().trim();
            if (checkDT(dienthoai) == null) {
                return;
            }
            String email = emEdt.getText().trim();
            if (checkMail(email) == null) {
                return;
            }
            String maphongban = null;
            String mpbid = pbEdt.getSelectedItem().toString();
            if (mpbid.equals("--Chọn Phòng Ban--")) {
                JOptionPane.showMessageDialog(this, "Hãy chọn loại phòng ban!");
                return;
            }
            String sqlid = "SELECT * FROM `phongban` Where tenphongban = ('" + mpbid + "') ";
            conn = NhanVien.connect();
            Statement stid = conn.createStatement();
            ResultSet rsid = stid.executeQuery(sqlid);
            while (rsid.next()) {
                maphongban = rsid.getString("maphongban");
            }
            conn.close();
            Date ngayvaolam = new Date(nvlEdt.getDate().getTime());
            conn = NhanVien.connect();
            String sql = "UPDATE nhanvien SET tennv = N'" + tennv
                    + "', ngaysinh = '" + ngaysinh
                    + "', gioitinh = '" + gioitinh
                    + "', dienthoai = '" + dienthoai
                    + "', email = '" + email
                    + "', maphongban = '" + maphongban
                    + "', ngayvaolam = '" + ngayvaolam
                    + "' WHERE manv = " + manv;
            try (Statement st = conn.createStatement()) {
                st.executeUpdate(sql);
            }
            conn.close();
            loadDB();
        } catch (ClassNotFoundException | SQLException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_cnBtnActionPerformed

    private void xoaBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xoaBtnActionPerformed
        // TODO add your handling code here:
        try {
            String manv = mnvEdt.getText().trim();
            int confirm = JOptionPane.showConfirmDialog(this,
                    "Bạn có chắc chắn muốn xóa nhà xuát bản với mã " + manv + "?",
                    "Xác nhận xóa",
                    JOptionPane.YES_NO_OPTION);
            if (confirm == JOptionPane.YES_OPTION) {
                String sql = "DELETE FROM nhanvien WHERE manv = " + manv;
                conn = NhanVien.connect();
                Statement st = conn.createStatement();
                st.executeUpdate(sql);
                st.close();
                conn.close();
                loadDB();
//                loadJCB();
            }
        } catch (ClassNotFoundException | SQLException e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }//GEN-LAST:event_xoaBtnActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_jButton6ActionPerformed

    private void timKiemBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timKiemBtnActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            ((DefaultTableModel) table.getModel()).setRowCount(0);
            String manv = mnvTk.getText().trim();
            String tennv = tnvTk.getText().trim();
            conn = NhanVien.connect();
            String sql = "SELECT * FROM `nhanvien` Where manv like '%" + manv + "%' and tennv like N'%" + tennv + "%' ";
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                Vector<String> vt = new Vector<>();
                vt.add(rs.getString("manv"));
                vt.add(rs.getString("tennv"));
                vt.add(rs.getString("ngaysinh"));
                vt.add(rs.getString("gioitinh"));
                vt.add(rs.getString("dienthoai"));
                vt.add(rs.getString("email"));
                vt.add(rs.getString("maphongban"));
                vt.add(rs.getString("ngayvaolam"));
                model.addRow(vt);
                System.out.println(vt);
            }
            table.setModel(model);
            conn.close();
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(NhanVien.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_timKiemBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cnBtn;
    private javax.swing.JTextField dtEdt;
    private javax.swing.JTextField emEdt;
    private javax.swing.JComboBox<String> gtEdt;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton luuBtn;
    private javax.swing.JTextField mnvEdt;
    private javax.swing.JTextField mnvTk;
    private com.toedter.calendar.JDateChooser nsEdt;
    private com.toedter.calendar.JDateChooser nvlEdt;
    private javax.swing.JComboBox<String> pbEdt;
    private javax.swing.JTable table;
    private javax.swing.JButton themBtn;
    private javax.swing.JButton timKiemBtn;
    private javax.swing.JTextField tnvEdt;
    private javax.swing.JTextField tnvTk;
    private javax.swing.JButton xoaBtn;
    // End of variables declaration//GEN-END:variables
}
